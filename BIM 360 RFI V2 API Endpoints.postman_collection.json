{
	"info": {
		"_postman_id": "420687c9-6f41-4535-8f3a-e4d10b5a4cfb",
		"name": "BIM 360 RFI V2 API Endpoints",
		"description": "This collection follows the API Reference at \r\nhttps://forge.autodesk.com/en/docs/bim360/v1/reference/http/rfis-v2-rfis-GET/\r\nand some tutorials at\r\nhttps://forge.autodesk.com/en/docs/bim360/v1/tutorials/rfis/retrieve-rfis-container-id/\r\n\r\nIt shows the basic usage of each endpoint of API. you can add/modify with testing on more scenarios. \r\nPlease check the description of each endpoint before running the endpoint.\r\n\r\nThe scripts of tutorials are not exact same to the document, while the API logic behind is similar.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "API Reference",
			"item": [
				{
					"name": "Run Firstly",
					"item": [
						{
							"name": "01-GET one hub",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "111cd299-b948-4f5b-8b8f-d28125517dd0",
										"exec": [
											"pm.test(\"Get hub collection, Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var hub_name = pm.environment.get(\"hub_name\") ",
											"",
											"pm.test(\"find matches hub by id: \" + hub_name, function () {",
											"    var body = JSON.parse(responseBody);",
											"    var find = body.data.find(d=>d.attributes.name == hub_name)",
											"",
											"    pm.expect(find).not.eq(undefined); ",
											"    ",
											"    if(find){",
											"        pm.environment.set(\"hub_id_with_b\", find.id);",
											"        pm.environment.set(\"hub_id_without_b\", find.id.split(\"b.\").join(\"\"));",
											"    }else{",
											"        ",
											"    }",
											"    ",
											"});",
											"",
											"     "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "4d86450e-4bfb-4a03-931c-eecfab2df9e6",
										"exec": [
											"pm.environment.set(\"hub_name\", \"Autodesk Forge Partner Development\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_domain}}/project/v1/hubs",
									"host": [
										"{{base_domain}}"
									],
									"path": [
										"project",
										"v1",
										"hubs"
									]
								},
								"description": "GET all hubs of your account, and get one hub. Please provide the hub name (hub_name) in environment variables"
							},
							"response": []
						},
						{
							"name": "02-GET one project",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "32dc7e27-afa0-45a0-bfab-ddec7b60e0c3",
										"exec": [
											"pm.test(\"Get project collection, Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var project_name = pm.environment.get(\"project_name\") ",
											"pm.test(\"find matches project by name: \" + project_name, function () {",
											"    var body = JSON.parse(responseBody);",
											"    var find = body.data.find(d=>d.attributes.name == project_name)",
											"",
											"    pm.expect(find).not.eq(undefined); ",
											"    ",
											"    if(find){",
											"        pm.environment.set(\"project_id_with_b\", find.id);",
											"        pm.environment.set(\"project_id_without_b\", find.id.split(\"b.\").join(\"\"));",
											"    }else{",
											"        ",
											"    }",
											"    ",
											"});",
											"",
											"     "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "bf6e61c9-2d59-4ae6-8682-8d2a9f0c3821",
										"exec": [
											"pm.environment.set(\"project_name\", \"Forge Concert Hall\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_domain}}/project/v1/hubs/{{hub_id_with_b}}/projects",
									"host": [
										"{{base_domain}}"
									],
									"path": [
										"project",
										"v1",
										"hubs",
										"{{hub_id_with_b}}",
										"projects"
									]
								},
								"description": "GET all projects of one hub, and get one project Please provide the hub name (project_name) in environment variables"
							},
							"response": []
						},
						{
							"name": "03-GET RFI container ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "642abbaa-f44b-46e3-be67-bad95f960a8e",
										"exec": [
											"pm.test(\"Get project data, Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"find RFI container ID \", function () {",
											"    var body = JSON.parse(responseBody);",
											"    var find = body.data.relationships.rfis.data.id  ",
											"",
											"    pm.expect(find).not.eq(undefined); ",
											"    pm.environment.set(\"rfi_container_id\", find); ",
											"    ",
											"});",
											"",
											"pm.test(\"find Root Folder ID \", function () {",
											"    var body = JSON.parse(responseBody);",
											"    var find = body.data.relationships.rootFolder.data.id  ",
											"",
											"    pm.expect(find).not.eq(undefined); ",
											"    pm.environment.set(\"root_folder_id\", find); ",
											"    ",
											"});",
											" "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_domain}}/project/v1/hubs/{{hub_id_with_b}}/projects/{{project_id_with_b}}",
									"host": [
										"{{base_domain}}"
									],
									"path": [
										"project",
										"v1",
										"hubs",
										"{{hub_id_with_b}}",
										"projects",
										"{{project_id_with_b}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "04-Get project user name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fe8fa7ff-f9c0-4ca1-ac01-e4d0887cb2d5",
										"exec": [
											"pm.test(\"Get project users, Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var one_user_email = pm.environment.get(\"one_creator_email\");",
											"",
											"pm.test(\"find one user id by email: \" + one_user_email, function () {",
											"    var body = JSON.parse(responseBody);",
											"    var find = body.results.find(d=>d.email==one_user_email)  ",
											"",
											"    pm.expect(find).not.eq(undefined); ",
											"    pm.environment.set(\"one_user_autodeskId\", find.autodeskId); ",
											"    pm.environment.set(\"one_user_name\", find.name); ",
											"",
											"    ",
											"});",
											"",
											"  "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cc2bf98a-d00e-440d-81d4-4606dc365d40",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_domain}}/bim360/admin/v1/projects/{{project_id_with_b}}/users",
									"host": [
										"{{base_domain}}"
									],
									"path": [
										"bim360",
										"admin",
										"v1",
										"projects",
										"{{project_id_with_b}}",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "05-GET project file folder id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5dac0b32-acec-4138-8acd-075a4a68bac8",
										"exec": [
											"pm.test(\"Get project top folders, Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"find Project Files folder ID \", function () {",
											"    var body = JSON.parse(responseBody);",
											"    var find = body.data.find(d=>d.attributes.displayName == \"Project Files\")",
											"",
											"    pm.expect(find).not.eq(undefined); ",
											"    pm.environment.set(\"projectfiles_folder_id\", find.id); ",
											"    ",
											"});",
											" "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_domain}}/project/v1/hubs/{{hub_id_with_b}}/projects/{{project_id_with_b}}/topFolders",
									"host": [
										"{{base_domain}}"
									],
									"path": [
										"project",
										"v1",
										"hubs",
										"{{hub_id_with_b}}",
										"projects",
										"{{project_id_with_b}}",
										"topFolders"
									]
								}
							},
							"response": []
						},
						{
							"name": "06-GET one file lineage and seed URN-Assume at least one file is available",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "60da83d6-a4e1-4507-a19a-7c3eeb413015",
										"exec": [
											"pm.test(\"Get one folder contents, Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var lineageUrn = null",
											"",
											"pm.test(\"find one file lineage URN \", function () {",
											"    var body = JSON.parse(responseBody);",
											"    var find = body.data[0]",
											"",
											"    pm.expect(find).not.eq(undefined); ",
											"    pm.environment.set(\"rfi_existing_file_urn\", find.id);",
											"    pm.environment.set(\"rfi_existing_file_displayname\", find.attributes.displayName);  ",
											"    lineageUrn = find.id;",
											" ",
											"});",
											"",
											"pm.test(\"find one file Seed URN \", function () {",
											"    var body = JSON.parse(responseBody);",
											"    var find = body.included.find(i=>i.relationships.item.data.id==lineageUrn)",
											"",
											"    pm.expect(find).not.eq(undefined); ",
											"    pm.environment.set(\"rfi_existing_file_seed_urn\", find.relationships.derivatives.data.id);  ",
											"});",
											" "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_domain}}/data/v1/projects/{{project_id_with_b}}/folders/{{projectfiles_folder_id}}/contents?filter[type]=items",
									"host": [
										"{{base_domain}}"
									],
									"path": [
										"data",
										"v1",
										"projects",
										"{{project_id_with_b}}",
										"folders",
										"{{projectfiles_folder_id}}",
										"contents"
									],
									"query": [
										{
											"key": "filter[type]",
											"value": "items"
										}
									]
								},
								"description": "Assume at least one file is available. The script will pick the firs file urn"
							},
							"response": []
						}
					],
					"description": "This is to get RFI container ID and prepare user id and one file urn",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "GET rfis/users/me",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/users/me",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET RFIs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "50937258-fe14-4a5d-b00d-3fe0f6dbe34c",
								"exec": [
									"var body = JSON.parse(responseBody);",
									"pm.environment.set(\"one_rfi_id\", body[\"results\"][0].id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/rfis?limit=50",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"rfis"
							],
							"query": [
								{
									"key": "limit",
									"value": "50"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET RFIs/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/rfis/{{one_rfi_id}}",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"rfis",
								"{{one_rfi_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST rfis",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "11a3b229-d49b-4eac-9fad-0457e1043e9e",
								"exec": [
									"var body = JSON.parse(responseBody);",
									"pm.environment.set(\"one_rfi_id\", body[\"id\"])"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ec0b5bbd-2521-44d0-8426-09ab7df5c16d",
								"exec": [
									"var currentDate = new Date()\r",
									"var titleDateStr = currentDate.getFullYear() \r",
									"                +\"-\" + ((\"0\" + (currentDate.getMonth()+1)).slice(-2) )\r",
									"                + \"-\" +  (\"0\" + currentDate.getDate()).slice(-2) \r",
									"                + \"T\" +(\"0\" + currentDate.getHours()).slice(-2) \r",
									"                + \":\" + (\"0\" + currentDate.getMinutes()).slice(-2) \r",
									"                + \":\" + (\"0\" + currentDate.getSeconds()).slice(-2) \r",
									"                + \".000Z\"\r",
									"var dueDateStr = titleDateStr\r",
									"pm.environment.set(\"rfi_title_date\", titleDateStr);\r",
									"pm.environment.set(\"due_date\", dueDateStr);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n         \"status\": \"draft\",\n        \"title\": \"create RFI as Draft by API, assign to {{one_user_name}} on {{rfi_title_date}}\",\n        \"question\": \"Will we survive with API?\",\n        \"dueDate\": \"{{due_date}}\",\n        \"assignedTo\": \"{{one_user_autodeskId}}\"\n }"
						},
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/rfis",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"rfis"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST rfis with pushpin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2a18d0b-469e-4854-81ce-7239c8f59e73",
								"exec": [
									"var body = JSON.parse(responseBody);",
									"pm.environment.set(\"one_rfi_id\", body[\"id\"])"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n            \"title\": \"create RFI as Draft by API, assign to {{one_user_name}} on {{rfi_title_date}}\",\n            \"question\": \"\",\n            \"status\": \"submitted\",\n             \"assignedTo\": \"{{one_user_autodeskId}}\",\n             \"linkedDocument\": \"{{rfi_existing_file_urn}}\",\n             \"pushpinAttributes\": {\n\t\t\t        \"location\": {\n\t\t\t            \"x\": -120.88224361161537,\n\t\t\t            \"y\": -189.23918151855474,\n\t\t\t            \"z\": 8.49880441847614\n\t\t\t        },\n\t\t\t        \"objectId\": \"1\",\n\t\t\t        \"type\": \"TwoDVectorPushpin\",\n\t\t\t        \"viewerState\": {\n\t\t\t            \"seedURN\": \"{{rfi_existing_file_seed_urn}}\",\n\t\t\t            \"viewport\": {\n\t\t\t                \"up\": [\n\t\t\t                    -0.30864454825374693,\n\t\t\t                    0.29197481273166564,\n\t\t\t                    0.9052564562396388\n\t\t\t                ],\n\t\t\t                \"eye\": [\n\t\t\t                    \"199.59531283648658\",\n\t\t\t                    \"-159.04935941152326\",\n\t\t\t                    \"156.38680334350138\"\n\t\t\t                ],\n\t\t\t                \"name\": \"\",\n\t\t\t                \"target\": [\n\t\t\t                    \"65.44223022842972\",\n\t\t\t                    \"-32.141816759382564\",\n\t\t\t                    \"69.71586823145593\"\n\t\t\t                ],\n\t\t\t                \"pivotPoint\": [\n\t\t\t                    \"18.258285522460938\",\n\t\t\t                    \"-76.55072784423828\",\n\t\t\t                    \"18.70078625212983\"\n\t\t\t                ],\n\t\t\t                \"projection\": \"orthographic\",\n\t\t\t                \"aspectRatio\": 1.468390839675377,\n\t\t\t                \"worldUpVector\": [\n\t\t\t                    0,\n\t\t\t                    0,\n\t\t\t                    1\n\t\t\t                ],\n\t\t\t                \"isOrthographic\": true,\n\t\t\t                \"distanceToOrbit\": 229.07294112219935,\n\t\t\t                \"orthographicHeight\": 203.99613954299585\n\t\t\t            },\n\t\t\t            \"cutplanes\": [],\n\t\t\t            \"objectSet\": [\n\t\t\t                {\n\t\t\t                    \"id\": [\n\t\t\t                        2659\n\t\t\t                    ],\n\t\t\t                    \"hidden\": [],\n\t\t\t                    \"idType\": \"lmv\",\n\t\t\t                    \"isolated\": [],\n\t\t\t                    \"explodeScale\": 0\n\t\t\t                }\n\t\t\t            ],\n\t\t\t            \"globalOffset\": {\n\t\t\t                \"x\": 141.90737915039062,\n\t\t\t                \"y\": 12.19140625,\n\t\t\t                \"z\": 16.274480481255807\n\t\t\t            },\n\t\t\t            \"renderOptions\": {\n\t\t\t                \"toneMap\": {\n\t\t\t                    \"method\": 1,\n\t\t\t                    \"exposure\": -7,\n\t\t\t                    \"lightMultiplier\": -1e-20\n\t\t\t                },\n\t\t\t                \"appearance\": {\n\t\t\t                    \"ghostHidden\": true,\n\t\t\t                    \"antiAliasing\": true,\n\t\t\t                    \"displayLines\": true,\n\t\t\t                    \"ambientShadow\": false,\n\t\t\t                    \"displayPoints\": true,\n\t\t\t                    \"swapBlackAndWhite\": false,\n\t\t\t                    \"progressiveDisplay\": true\n\t\t\t                },\n\t\t\t                \"environment\": \"Boardwalk\",\n\t\t\t                \"ambientOcclusion\": {\n\t\t\t                    \"radius\": 13.123359580052492,\n\t\t\t                    \"enabled\": false,\n\t\t\t                    \"intensity\": 1\n\t\t\t                }\n\t\t\t            }\n\t\t\t         }\n    }\n  }"
						},
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/rfis",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"rfis"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH rfis/:id",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"status\": \"void\",\n        \"title\": \"patch RFI by API with changed params\" \n }"
						},
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/rfis/{{one_rfi_id}}",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"rfis",
								"{{one_rfi_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var body = JSON.parse(responseBody);",
									"pm.environment.set(\"one_comment_id\", body[\"results\"][0].id)"
								],
								"id": "a6121ec9-0bcb-4413-85ed-eda2fff67e96"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/rfis/{{one_rfi_id}}/comments",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"rfis",
								"{{one_rfi_id}}",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var body = JSON.parse(responseBody);",
									"pm.environment.set(\"one_comment_id\", body[\"id\"])"
								],
								"id": "7b844169-6d17-42bf-afc9-13aabeb85a1e"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"body\":\"my comments by API\"\n}"
						},
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/rfis/{{one_rfi_id}}/comments",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"rfis",
								"{{one_rfi_id}}",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST attachments",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf2f88ef-0697-4159-ad3e-496973c6e5e3",
								"exec": [
									"var body = JSON.parse(responseBody);",
									"pm.environment.set(\"one_attachment_id\", body[\"id\"].id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"name\": \"{{rfi_existing_file_displayname}}\",\n        \"urn\": \"{{rfi_existing_file_urn}}\",\n        \"urnType\": \"dm\"\n }"
						},
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/rfis/{{one_rfi_id}}/attachments",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"rfis",
								"{{one_rfi_id}}",
								"attachments"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET RFIs/:id/attachments",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var body = JSON.parse(responseBody);",
									"pm.environment.set(\"one_attachment_id\", body[\"results\"][0].id)"
								],
								"id": "a02d87bf-e788-4402-b64c-fd41c434ddf9"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/rfis/{{one_rfi_id}}/attachments",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"rfis",
								"{{one_rfi_id}}",
								"attachments"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE attachments/:attachmentId",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/rfis/{{one_rfi_id}}/attachments/{{one_attachment_id}}",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"rfis",
								"{{one_rfi_id}}",
								"attachments",
								"{{one_attachment_id}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Workflow : Draft>>Sumittted->Open->Answered>>Closed",
			"item": [
				{
					"name": "01-GET one hub",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3ecb21bf-c463-4612-8ab0-456a2278e4a6",
								"exec": [
									"pm.test(\"Get hub collection, Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var hub_name = pm.environment.get(\"hub_name\") ",
									"",
									"pm.test(\"find matches hub by id: \" + hub_name, function () {",
									"    var body = JSON.parse(responseBody);",
									"    var find = body.data.find(d=>d.attributes.name == hub_name)",
									"",
									"    pm.expect(find).not.eq(undefined); ",
									"    ",
									"    if(find){",
									"        pm.environment.set(\"hub_id_with_b\", find.id);",
									"        pm.environment.set(\"hub_id_without_b\", find.id.split(\"b.\").join(\"\"));",
									"    }else{",
									"        ",
									"    }",
									"    ",
									"});",
									"",
									"     "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1ec49854-f0ed-48fb-b370-97c0e9bc84b2",
								"exec": [
									"pm.environment.set(\"hub_name\", \"Autodesk Forge Partner Development\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_domain}}/project/v1/hubs",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"project",
								"v1",
								"hubs"
							]
						},
						"description": "GET all hubs of your account, and get one hub. Please provide the hub name (hub_name) in environment variables"
					},
					"response": []
				},
				{
					"name": "02-GET one project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "acdc57ef-1e55-4777-8d3c-f7e4fd28070e",
								"exec": [
									"pm.test(\"Get project collection, Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var project_name = pm.environment.get(\"project_name\") ",
									"pm.test(\"find matches project by name: \" + project_name, function () {",
									"    var body = JSON.parse(responseBody);",
									"    var find = body.data.find(d=>d.attributes.name == project_name)",
									"",
									"    pm.expect(find).not.eq(undefined); ",
									"    ",
									"    if(find){",
									"        pm.environment.set(\"project_id_with_b\", find.id);",
									"        pm.environment.set(\"project_id_without_b\", find.id.split(\"b.\").join(\"\"));",
									"    }else{",
									"        ",
									"    }",
									"    ",
									"});",
									"",
									"     "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6f542b43-ad5a-4d81-abd3-2a455264162c",
								"exec": [
									"pm.environment.set(\"project_name\", \"Forge Concert Hall\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_domain}}/project/v1/hubs/{{hub_id_with_b}}/projects",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"project",
								"v1",
								"hubs",
								"{{hub_id_with_b}}",
								"projects"
							]
						},
						"description": "GET all projects of one hub, and get one project Please provide the hub name (project_name) in environment variables"
					},
					"response": []
				},
				{
					"name": "03-GET RFI container ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "12f5264e-53a1-4023-be96-36e32ec166dd",
								"exec": [
									"pm.test(\"Get project data, Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"find RFI container ID \", function () {",
									"    var body = JSON.parse(responseBody);",
									"    var find = body.data.relationships.rfis.data.id  ",
									"",
									"    pm.expect(find).not.eq(undefined); ",
									"    pm.environment.set(\"rfi_container_id\", find); ",
									"    ",
									"});",
									"",
									"pm.test(\"find Root Folder ID \", function () {",
									"    var body = JSON.parse(responseBody);",
									"    var find = body.data.relationships.rootFolder.data.id  ",
									"",
									"    pm.expect(find).not.eq(undefined); ",
									"    pm.environment.set(\"root_folder_id\", find); ",
									"    ",
									"});",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_domain}}/project/v1/hubs/{{hub_id_with_b}}/projects/{{project_id_with_b}}",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"project",
								"v1",
								"hubs",
								"{{hub_id_with_b}}",
								"projects",
								"{{project_id_with_b}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "04-Get project user name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f22f3596-4b14-45d7-8ce4-d5783023a78c",
								"exec": [
									"pm.test(\"Get project users, Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var one_user_email = pm.environment.get(\"one_creator_email\");",
									"",
									"pm.test(\"find one user id by email: \" + one_user_email, function () {",
									"    var body = JSON.parse(responseBody);",
									"    var find = body.results.find(d=>d.email==one_user_email)  ",
									"",
									"    pm.expect(find).not.eq(undefined); ",
									"    pm.environment.set(\"one_user_autodeskId\", find.autodeskId); ",
									"    pm.environment.set(\"one_user_name\", find.name); ",
									"",
									"    ",
									"});",
									"",
									"  "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "34c96510-46ad-4a55-84ed-20b0cb4fbd09",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_domain}}/bim360/admin/v1/projects/{{project_id_with_b}}/users",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"admin",
								"v1",
								"projects",
								"{{project_id_with_b}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "05-POST one RFI as Draft",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "383e10ac-b608-4aa5-a5a2-35c6836065ec",
								"exec": [
									"pm.test(\"Create RFI, Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var one_user_name = pm.environment.get(\"one_user_name\");",
									"var rfi_title_date = pm.environment.get(\"rfi_title_date\"); ",
									"",
									" ",
									"pm.test(\"get created RFI id. Title:\" + ",
									"\"create RFI by API, assign to \" + one_user_name + \" on \" + rfi_title_date, function () {",
									"     ",
									"    var body = JSON.parse(responseBody);",
									"    pm.expect( body.id).not.eq(undefined);  ",
									"    pm.environment.set(\"one_rfi_id\", body.id);",
									"    ",
									"});",
									"",
									"  ",
									"  ",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "92be64d9-833f-4db4-82fc-a2c9787203c4",
								"exec": [
									"var currentDate = new Date()",
									"var titleDateStr = currentDate.getFullYear() ",
									"                +\"-\" + ((\"0\" + (currentDate.getMonth()+1)).slice(-2) )",
									"                + \"-\" +  (\"0\" + currentDate.getDate()).slice(-2) ",
									"                + \"T\" +(\"0\" + currentDate.getHours()).slice(-2) ",
									"                + \":\" + (\"0\" + currentDate.getMinutes()).slice(-2) ",
									"                + \":\" + (\"0\" + currentDate.getSeconds()).slice(-2) ",
									"                + \".000Z\"",
									"var dueDateStr = titleDateStr",
									"pm.environment.set(\"rfi_title_date\", titleDateStr);",
									"pm.environment.set(\"due_date\", dueDateStr);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"status\": \"draft\",\n        \"title\": \"create RFI as Draft by API, assign to {{one_user_name}} on {{rfi_title_date}}\",\n        \"question\": \"Will we survive with API?\",\n        \"dueDate\": \"{{due_date}}\",\n        \"assignedTo\": \"{{one_user_autodeskId}}\"\n }"
						},
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/rfis",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"rfis"
							]
						},
						"description": "A Draft RFI can be transferred to Manager as Submitted status, or transferred to Reviewer as Open status."
					},
					"response": []
				},
				{
					"name": "06-GET permitted status [Submitted] of one RFI",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac7d88fe-27df-4ff1-9000-1d725cbc9570",
								"exec": [
									"pm.test(\"GET RFI data, Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									" ",
									"pm.test(\"get [Submitted] permitted action\", function () {",
									"     ",
									"    var body = JSON.parse(responseBody);",
									"    ",
									"    var permittedStatuses = body.permittedActions.updateRfi.permittedStatuses",
									"    var open_status = permittedStatuses.find(d=>d.status == \"submitted\")",
									"    if(open_status){",
									"        var one_reviewer_adskId = open_status.requiredAttributes[0].values[0].value",
									"        pm.expect( one_reviewer_adskId).not.eq(undefined);  ",
									"        pm.environment.set(\"one_manager_adskId\", one_reviewer_adskId); ",
									"    }else{",
									"       pm.expect( open_status).not.eq(undefined);   ",
									"    } ",
									"    ",
									"});",
									"",
									"  ",
									"  ",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/rfis/{{one_rfi_id}}",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"rfis",
								"{{one_rfi_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "07-PATCH one RFI to Manager with [Submitted] status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "594d81d3-cb7d-46a3-ae5a-72f6ce4c87d7",
								"exec": [
									"pm.test(\"PATCH one RFI to Manager with [Submitted] status, Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									" ",
									"pm.test(\"get [Open] permitted action and Reviewer\", function () {",
									"     ",
									"    var body = JSON.parse(responseBody);",
									"    ",
									"    var permittedStatuses = body.permittedActions.updateRfi.permittedStatuses",
									"    var answered_status = permittedStatuses.find(d=>d.status == \"open\")",
									"    if(answered_status){",
									"        var one_reviewer_adskId = answered_status.requiredAttributes[0].values[0].value",
									"        pm.expect( one_reviewer_adskId).not.eq(undefined);  ",
									"        pm.environment.set(\"one_reviewer_adskId\", one_reviewer_adskId); ",
									"    }else{",
									"       pm.expect( open_status).not.eq(undefined);   ",
									"    } ",
									"    ",
									"});",
									"",
									"  ",
									"  ",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"status\": \"submitted\",\n        \"assignedTo\": \"{{one_manager_adskId}}\"\n }"
						},
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/rfis/{{one_rfi_id}}",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"rfis",
								"{{one_rfi_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "08-PATCH Reviewer with [Open] status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "74dbd7f6-4fa5-40b5-afc7-cfd84646fc31",
								"exec": [
									"pm.test(\"PATCH RFI to answered, Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fd5fb9f2-fd75-457a-8518-b45f9ad5e754",
								"exec": [
									"var currentDate = new Date()",
									"var answerDateStr = currentDate.getFullYear() ",
									"                +\"-\" + ((\"0\" + (currentDate.getMonth()+1)).slice(-2) )",
									"                + \"-\" +  (\"0\" + currentDate.getDate()).slice(-2) ",
									"                + \"T\" +(\"0\" + currentDate.getHours()).slice(-2) ",
									"                + \":\" + (\"0\" + currentDate.getMinutes()).slice(-2) ",
									"                + \":\" + (\"0\" + currentDate.getSeconds()).slice(-2) ",
									"                + \".000Z\"",
									"pm.environment.set(\"rfi_answer_date\", answerDateStr);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"status\": \"open\" ,\n        \"assignedTo\": \"{{one_reviewer_adskId}}\"\n\n  }"
						},
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/rfis/{{one_rfi_id}}",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"rfis",
								"{{one_rfi_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "09-PATCH RFI to answer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9ee8676e-c099-4863-9e6b-5cc4621033bb",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e3489022-6f35-43bd-b096-08f3dc7f4195",
								"exec": [
									"var currentDate = new Date()",
									"var answerDateStr = currentDate.getFullYear() ",
									"                +\"-\" + ((\"0\" + (currentDate.getMonth()+1)).slice(-2) )",
									"                + \"-\" +  (\"0\" + currentDate.getDate()).slice(-2) ",
									"                + \"T\" +(\"0\" + currentDate.getHours()).slice(-2) ",
									"                + \":\" + (\"0\" + currentDate.getMinutes()).slice(-2) ",
									"                + \":\" + (\"0\" + currentDate.getSeconds()).slice(-2) ",
									"                + \".000Z\"",
									"pm.environment.set(\"rfi_answer_date\", answerDateStr);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"status\": \"answered\" ,\n        \"officialResponse\":\"{{one_reviewer_adskId}} input answer at {{rfi_answer_date}}\"\n }"
						},
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/rfis/{{one_rfi_id}}",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"rfis",
								"{{one_rfi_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "10-PATCH RFI to close",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "55308149-3206-43f9-9aa3-f4548312ae1a",
								"exec": [
									"pm.test(\"PATCH RFI to close, Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"status\": \"closed\" ,\n        \"distributionList\":[\"{{one_reviewer_adskId}}\"]\n }"
						},
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/rfis/{{one_rfi_id}}",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"rfis",
								"{{one_rfi_id}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f7c602fb-2354-490f-995f-9f9f28909b08",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a6d3d374-211d-44e7-8840-b3cd6a806b82",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Create RFI, add comment and get comments",
			"item": [
				{
					"name": "01-GET one hub",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a9f3c147-3caf-45d6-af7d-cd83ccb86925",
								"exec": [
									"pm.test(\"Get hub collection, Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var hub_name = pm.environment.get(\"hub_name\") ",
									"",
									"pm.test(\"find matches hub: \" + hub_name, function () {",
									"    var body = JSON.parse(responseBody);",
									"    var find = body.data.find(d=>d.attributes.name == hub_name)",
									"",
									"    pm.expect(find).not.eq(undefined); ",
									"    ",
									"    if(find){",
									"        pm.environment.set(\"hub_id_with_b\", find.id);",
									"        pm.environment.set(\"hub_id_without_b\", find.id.split(\"b.\").join(\"\"));",
									"    }else{",
									"        ",
									"    }",
									"    ",
									"});",
									"",
									"     "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "17a77c1b-4e16-4b65-8f27-f1bfd219da60",
								"exec": [
									"pm.environment.set(\"hub_name\", \"Autodesk Forge Partner Development\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_domain}}/project/v1/hubs",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"project",
								"v1",
								"hubs"
							]
						},
						"description": "GET all hubs of your account, and get one hub. Please provide the hub name (hub_name) in environment variables"
					},
					"response": []
				},
				{
					"name": "02-GET one project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1735fb50-1965-447e-9bde-cce60d0d31fd",
								"exec": [
									"pm.test(\"Get project collection, Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var project_name = pm.environment.get(\"project_name\") ",
									"pm.test(\"find matches project: \" + project_name, function () {",
									"    var body = JSON.parse(responseBody);",
									"    var find = body.data.find(d=>d.attributes.name == project_name)",
									"",
									"    pm.expect(find).not.eq(undefined); ",
									"    ",
									"    if(find){",
									"        pm.environment.set(\"project_id_with_b\", find.id);",
									"        pm.environment.set(\"project_id_without_b\", find.id.split(\"b.\").join(\"\"));",
									"    }else{",
									"        ",
									"    }",
									"    ",
									"});",
									"",
									"     "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a453af9c-8e89-4746-b291-68d955882372",
								"exec": [
									"pm.environment.set(\"project_name\", \"Forge Concert Hall\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_domain}}/project/v1/hubs/{{hub_id_with_b}}/projects",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"project",
								"v1",
								"hubs",
								"{{hub_id_with_b}}",
								"projects"
							]
						},
						"description": "GET all projects of one hub, and get one project Please provide the hub name (project_name) in environment variables"
					},
					"response": []
				},
				{
					"name": "03-GET RFI container ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ff05ff47-3873-42b7-8c8c-1f9a0a92dd0d",
								"exec": [
									"pm.test(\"Get project data, Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"find RFI container ID \", function () {",
									"    var body = JSON.parse(responseBody);",
									"    var find = body.data.relationships.rfis.data.id  ",
									"",
									"    pm.expect(find).not.eq(undefined); ",
									"    pm.environment.set(\"rfi_container_id\", find); ",
									"    ",
									"});",
									"",
									"pm.test(\"find Root Folder ID \", function () {",
									"    var body = JSON.parse(responseBody);",
									"    var find = body.data.relationships.rootFolder.data.id  ",
									"",
									"    pm.expect(find).not.eq(undefined); ",
									"    pm.environment.set(\"root_folder_id\", find); ",
									"    ",
									"});",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_domain}}/project/v1/hubs/{{hub_id_with_b}}/projects/{{project_id_with_b}}",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"project",
								"v1",
								"hubs",
								"{{hub_id_with_b}}",
								"projects",
								"{{project_id_with_b}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "04-Get project user name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0e729be2-2f8a-42e8-9075-beffeb7edd6d",
								"exec": [
									"pm.test(\"Get project users, Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var one_user_email = pm.environment.get(\"one_creator_email\");",
									"",
									"pm.test(\"find one user id by email: \" + one_user_email, function () {",
									"    var body = JSON.parse(responseBody);",
									"    var find = body.results.find(d=>d.email==one_user_email)  ",
									"",
									"    pm.expect(find).not.eq(undefined); ",
									"    pm.environment.set(\"one_user_autodeskId\", find.autodeskId); ",
									"    pm.environment.set(\"one_user_name\", find.name); ",
									"",
									"    ",
									"});",
									"",
									"  "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f1de534c-983e-4b57-9300-c96e1198071e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "User-Id",
								"type": "text",
								"value": "200902260532621",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_domain}}/bim360/admin/v1/projects/{{project_id_with_b}}/users",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"admin",
								"v1",
								"projects",
								"{{project_id_with_b}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "05-POST one RFI as Draft",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8fd488b4-f9b3-41fd-a4b4-1b635db3344e",
								"exec": [
									"pm.test(\"Create RFI, Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var one_user_name = pm.environment.get(\"one_user_name\");",
									"var rfi_title_date = pm.environment.get(\"rfi_title_date\"); ",
									"",
									" ",
									"pm.test(\"get created RFI id. Title:\" + ",
									"\"create RFI by API, assign to \" + one_user_name + \" on \" + rfi_title_date, function () {",
									"     ",
									"    var body = JSON.parse(responseBody);",
									"    pm.expect( body.id).not.eq(undefined);  ",
									"    pm.environment.set(\"one_rfi_id\", body.id);",
									"    ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b07db343-a9c2-4014-babb-d03f5db4f31b",
								"exec": [
									"var currentDate = new Date()",
									"var commentDateStr = currentDate.getFullYear() ",
									"                +\"-\" + ((\"0\" + (currentDate.getMonth()+1)).slice(-2) )",
									"                + \"-\" +  (\"0\" + currentDate.getDate()).slice(-2) ",
									"                + \"T\" +(\"0\" + currentDate.getHours()).slice(-2) ",
									"                + \":\" + (\"0\" + currentDate.getMinutes()).slice(-2) ",
									"                + \":\" + (\"0\" + currentDate.getSeconds()).slice(-2) ",
									"                + \".000Z\"",
									"pm.environment.set(\"rfi_comment_date\", commentDateStr);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"status\": \"draft\",\n        \"title\": \"create RFI by API, assign to {{one_user_name}} on {{rfi_title_date}} with comments\",\n        \"question\": \"Will we survive with API?\",\n        \"dueDate\": \"{{due_date}}\",\n        \"assignedTo\": \"{{one_user_autodeskId}}\" \n        \n }"
						},
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/rfis",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"rfis"
							]
						}
					},
					"response": []
				},
				{
					"name": "06-POST comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d820d65-3063-401b-8c1e-a1578b20cf4b",
								"exec": [
									"pm.test(\"Post Comment with RFI, Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									" "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bcc9c5c2-2252-4484-a329-346773ed7bf4",
								"exec": [
									"var currentDate = new Date()",
									"var commentDateStr = currentDate.getFullYear() ",
									"                +\"-\" + ((\"0\" + (currentDate.getMonth()+1)).slice(-2) )",
									"                + \"-\" +  (\"0\" + currentDate.getDate()).slice(-2) ",
									"                + \"T\" +(\"0\" + currentDate.getHours()).slice(-2) ",
									"                + \":\" + (\"0\" + currentDate.getMinutes()).slice(-2) ",
									"                + \":\" + (\"0\" + currentDate.getSeconds()).slice(-2) ",
									"                + \".000Z\"",
									"pm.environment.set(\"rfi_comment_date\", commentDateStr);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"body\":\"post one more comment by API when creating RFI {{rfi_comment_date}}\"\n}"
						},
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/rfis/{{one_rfi_id}}/comments",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"rfis",
								"{{one_rfi_id}}",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "07-GET comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "50ec0fc6-a3a5-4642-86bb-cf7f4ccd0e66",
								"exec": [
									"pm.test(\"GET RFI Comments\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									" ",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/rfis/{{one_rfi_id}}/comments",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"rfis",
								"{{one_rfi_id}}",
								"comments"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Create RFI, add exiting document as attachment, and delete attachment",
			"item": [
				{
					"name": "01-GET one hub",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0bf4497d-69e9-40ad-9900-ee09988939ee",
								"exec": [
									"pm.test(\"Get hub collection, Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var hub_name = pm.environment.get(\"hub_name\") ",
									"",
									"pm.test(\"find matches hub: \" + hub_name, function () {",
									"    var body = JSON.parse(responseBody);",
									"    var find = body.data.find(d=>d.attributes.name == hub_name)",
									"",
									"    pm.expect(find).not.eq(undefined); ",
									"    ",
									"    if(find){",
									"        pm.environment.set(\"hub_id_with_b\", find.id);",
									"        pm.environment.set(\"hub_id_without_b\", find.id.split(\"b.\").join(\"\"));",
									"    }else{",
									"        ",
									"    }",
									"    ",
									"});",
									"",
									"     "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b7621a34-eef5-46f6-bc11-eba6870701e7",
								"exec": [
									"pm.environment.set(\"hub_name\", \"Autodesk Forge Partner Development\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_domain}}/project/v1/hubs",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"project",
								"v1",
								"hubs"
							]
						},
						"description": "GET all hubs of your account, and get one hub. Please provide the hub name (hub_name) in environment variables"
					},
					"response": []
				},
				{
					"name": "02-GET one project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a935e274-4b11-4124-a3d5-767fa9a4ced2",
								"exec": [
									"pm.test(\"Get project collection, Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var project_name = pm.environment.get(\"project_name\") ",
									"pm.test(\"find matches project: \" + project_name, function () {",
									"    var body = JSON.parse(responseBody);",
									"    var find = body.data.find(d=>d.attributes.name == project_name)",
									"",
									"    pm.expect(find).not.eq(undefined); ",
									"    ",
									"    if(find){",
									"        pm.environment.set(\"project_id_with_b\", find.id);",
									"        pm.environment.set(\"project_id_without_b\", find.id.split(\"b.\").join(\"\"));",
									"    }else{",
									"        ",
									"    }",
									"    ",
									"});",
									"",
									"     "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1d695aba-28e8-490a-a26f-c0ca8f45bf6b",
								"exec": [
									"pm.environment.set(\"project_name\", \"Forge Concert Hall\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_domain}}/project/v1/hubs/{{hub_id_with_b}}/projects",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"project",
								"v1",
								"hubs",
								"{{hub_id_with_b}}",
								"projects"
							]
						},
						"description": "GET all projects of one hub, and get one project Please provide the hub name (project_name) in environment variables"
					},
					"response": []
				},
				{
					"name": "03-GET RFI container ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4bf326d3-8782-4716-84bc-e564d6074b01",
								"exec": [
									"pm.test(\"Get project data, Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"find RFI container ID \", function () {",
									"    var body = JSON.parse(responseBody);",
									"    var find = body.data.relationships.rfis.data.id  ",
									"",
									"    pm.expect(find).not.eq(undefined); ",
									"    pm.environment.set(\"rfi_container_id\", find); ",
									"    ",
									"});",
									"",
									"pm.test(\"find Root Folder ID \", function () {",
									"    var body = JSON.parse(responseBody);",
									"    var find = body.data.relationships.rootFolder.data.id  ",
									"",
									"    pm.expect(find).not.eq(undefined); ",
									"    pm.environment.set(\"root_folder_id\", find); ",
									"    ",
									"});",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_domain}}/project/v1/hubs/{{hub_id_with_b}}/projects/{{project_id_with_b}}",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"project",
								"v1",
								"hubs",
								"{{hub_id_with_b}}",
								"projects",
								"{{project_id_with_b}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "04-Get project user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7cb6b8c7-8afc-4c04-9cf6-001660b8f3f4",
								"exec": [
									"pm.test(\"Get project users, Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"var one_user_email = pm.environment.get(\"one_creator_email\");",
									"",
									"pm.test(\"find one user id by email: \" + one_user_email, function () {",
									"    var body = JSON.parse(responseBody);",
									"    var find = body.results.find(d=>d.email==one_user_email)  ",
									"",
									"    pm.expect(find).not.eq(undefined); ",
									"    pm.environment.set(\"one_user_autodeskId\", find.autodeskId); ",
									"    pm.environment.set(\"one_user_name\", find.name); ",
									"",
									"    ",
									"});",
									"",
									"  "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f57926f0-afba-4589-a9d9-68d911714ede",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "User-Id",
								"type": "text",
								"value": "200902260532621",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_domain}}/bim360/admin/v1/projects/{{project_id_with_b}}/users",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"admin",
								"v1",
								"projects",
								"{{project_id_with_b}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "05-GET project file folder id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bfcd7172-8d05-4940-8c5d-fd9adbfb8497",
								"exec": [
									"pm.test(\"Get project top folders, Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"find Project Files folder ID \", function () {",
									"    var body = JSON.parse(responseBody);",
									"    var find = body.data.find(d=>d.attributes.displayName == \"Project Files\")",
									"",
									"    pm.expect(find).not.eq(undefined); ",
									"    pm.environment.set(\"projectfiles_folder_id\", find.id); ",
									"    ",
									"});",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_domain}}/project/v1/hubs/{{hub_id_with_b}}/projects/{{project_id_with_b}}/topFolders",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"project",
								"v1",
								"hubs",
								"{{hub_id_with_b}}",
								"projects",
								"{{project_id_with_b}}",
								"topFolders"
							]
						}
					},
					"response": []
				},
				{
					"name": "06-GET one file lineage URN-Assume at least one file is available",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9253f9b7-2660-409a-b334-43160e444023",
								"exec": [
									"pm.test(\"Get one folder contents, Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"find one file lineage URN \", function () {",
									"    var body = JSON.parse(responseBody);",
									"    var find = body.data[0]",
									"",
									"    pm.expect(find).not.eq(undefined); ",
									"    pm.environment.set(\"rfi_existing_file_urn\", find.id);",
									"    pm.environment.set(\"rfi_existing_file_displayname\", find.attributes.displayName); ",
									"",
									"    ",
									"});",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_domain}}/data/v1/projects/{{project_id_with_b}}/folders/{{projectfiles_folder_id}}/contents?filter[type]=items",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"data",
								"v1",
								"projects",
								"{{project_id_with_b}}",
								"folders",
								"{{projectfiles_folder_id}}",
								"contents"
							],
							"query": [
								{
									"key": "filter[type]",
									"value": "items"
								}
							]
						},
						"description": "Assume at least one file is available. The script will pick the firs file urn"
					},
					"response": []
				},
				{
					"name": "07-POST one RFI  with [Draft] submitted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fe11081d-f232-4ee3-af50-3d9c54989bc2",
								"exec": [
									"pm.test(\"Create RFI, Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									" ",
									"",
									"var one_user_name = pm.environment.get(\"one_user_name\");",
									"var rfi_title_date = pm.environment.get(\"rfi_title_date\"); ",
									"",
									" ",
									"pm.test(\"get created RFI id. Title:\" + ",
									"\"create RFI by API, assign to \" + one_user_name + \" on \" + rfi_title_date, function () {",
									"     ",
									"    var body = JSON.parse(responseBody);",
									"    pm.expect( body.id).not.eq(undefined);  ",
									"    pm.environment.set(\"one_rfi_id\", body.id);",
									"    ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a54e7154-5413-4afa-aee9-8d75d6ea768b",
								"exec": [
									"var currentDate = new Date()",
									"var commentDateStr = currentDate.getFullYear() ",
									"                +\"-\" + ((\"0\" + (currentDate.getMonth()+1)).slice(-2) )",
									"                + \"-\" +  (\"0\" + currentDate.getDate()).slice(-2) ",
									"                + \"T\" +(\"0\" + currentDate.getHours()).slice(-2) ",
									"                + \":\" + (\"0\" + currentDate.getMinutes()).slice(-2) ",
									"                + \":\" + (\"0\" + currentDate.getSeconds()).slice(-2) ",
									"                + \".000Z\"",
									"pm.environment.set(\"rfi_comment_date\", commentDateStr);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"status\": \"submitted\",\n        \"title\": \"create RFI by API, assign to {{one_user_name}} on {{rfi_title_date}} with attachment\",\n        \"question\": \"Will we survive with API?\",\n        \"dueDate\": \"{{due_date}}\",\n        \"assignedTo\": \"{{one_user_autodeskId}}\"\n        \n }"
						},
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/rfis",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"rfis"
							]
						}
					},
					"response": []
				},
				{
					"name": "08-POST new attachment for RFI",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e559ab1-3175-4fa3-b798-f7b8d907f486",
								"exec": [
									"pm.test(\"POST new attachment for RFI,Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"name\": \"{{rfi_existing_file_displayname}}\",\n        \"urn\": \"{{rfi_existing_file_urn}}\",\n        \"urnType\": \"dm\"\n }"
						},
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/rfis/{{one_rfi_id}}/attachments",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"rfis",
								"{{one_rfi_id}}",
								"attachments"
							]
						}
					},
					"response": []
				},
				{
					"name": "09-GET attachments",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9615006c-7040-4aa8-8875-c9e0c3d710e3",
								"exec": [
									"pm.test(\"Get RFI attachment, Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"get one attachment id \", function () {",
									"    var body = JSON.parse(responseBody);",
									"    var find = body.results[0]",
									"",
									"    pm.expect(find).not.eq(undefined); ",
									"    pm.environment.set(\"rfi_one_attachment_id\", find.id);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/rfis/{{one_rfi_id}}/attachments",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"rfis",
								"{{one_rfi_id}}",
								"attachments"
							]
						}
					},
					"response": []
				},
				{
					"name": "10-DELETE attachments",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7775808c-6caf-4c5f-b03a-77a8d3affd0d",
								"exec": [
									"pm.test(\"Delete attachment, Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_domain}}/bim360/rfis/v2/containers/{{rfi_container_id}}/rfis/{{one_rfi_id}}/attachments/{{rfi_one_attachment_id}}",
							"host": [
								"{{base_domain}}"
							],
							"path": [
								"bim360",
								"rfis",
								"v2",
								"containers",
								"{{rfi_container_id}}",
								"rfis",
								"{{one_rfi_id}}",
								"attachments",
								"{{rfi_one_attachment_id}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "(TODO) Create RFI, add local file as attachment, and delete attachment",
			"item": [],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "accessToken",
				"value": "eyJhbGciOiJIUzI1NiIsImtpZCI6Imp3dF9zeW1tZXRyaWNfa2V5In0.eyJzY29wZSI6WyJkYXRhOnJlYWQiLCJkYXRhOndyaXRlIiwiZGF0YTpjcmVhdGUiLCJhY2NvdW50OnJlYWQiXSwiY2xpZW50X2lkIjoiTjlxWEswOFBZdHRpY1dUR3NxaEJ1SjNnRTJKSTIzNEoiLCJncmFudF9pZCI6IkgzTEhUUWRHOHBEUlBLRktRUEx5YVVobXZLTG45dW1WIiwiYXVkIjoiaHR0cHM6Ly9hdXRvZGVzay5jb20vYXVkL2p3dGV4cDYwIiwianRpIjoiWWtxaDNYbFhzU3lhOU1DaEl0V0wyblE1RnVieDZtWkp3WkM4OWd6RlIydHF4UHB0YXFMMHpIdTg4QURvM1h1MiIsInVzZXJpZCI6IjIwMDkwMjI2MDUzMjYyMSIsImV4cCI6MTU5MzU5ODc5OX0.1uv1RSt61bgo0FyAG-8Fr1v6GErcVMZdbnh5KPT-pcA",
				"type": "string"
			},
			{
				"key": "tokenType",
				"value": "Bearer",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "270faaed-82b0-4b84-a5cc-6a7541ec1fbc",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "45052b69-4086-45c3-87a2-bf96989e9d1f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}